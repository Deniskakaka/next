@import './variables.scss';
@import './mixin.scss';
@import './breakpoint.scss';

@import './componentsStyle/head/header.scss';
@import './ui/hamburger-menu/hamburgeMenu.scss';
@import './componentsStyle/about/about.scss';
@import './ui/openAccount/openAccount.scss';
@import './componentsStyle/footer/footer.scss';
@import './componentsStyle/contact-us/contactUs.scss';
@import './componentsStyle/partnership/partnership.scss';
@import './componentsStyle/risk-management/risk-management.scss';
@import './componentsStyle/mainPage/mainPage.scss';
@import './ui/wrapper-accounts/wrapper-accounts.scss';
@import './ui/scrollLine/scrollLine.scss';
@import './componentsStyle/fqa/faq.scss';
@import './ui/bread-crumbs/bread-crumbs.scss';
@import './componentsStyle/mainPage/main-page-news/main-page-news.scss';
@import './componentsStyle/mainPage/main-page-table-of-contents/main-page-table-of-contents.scss';
@import './componentsStyle//mainPage/main-page-materials/main-page-materials.scss';
@import './componentsStyle/mainPage/main-page-instruments/main-page-instruments.scss';
@import './componentsStyle/mainPage/main-page-how-start/main-page-how-start.scss';

body {
    padding: 0;
    margin: 0;
}

.main {
    position: relative;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    background-color: #000000;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
}

::-webkit-input-placeholder { 
    color: rgba(254, 254, 254, 0.5);
    font-size: 14px;
    line-height: 20px;
    font-family: $FontText;
}
::-moz-placeholder {
    color: rgba(254, 254, 254, 0.5);
    font-size: 14px;
    line-height: 20px;
    font-family: $FontText;
}
:-moz-placeholder { 
    color: rgba(254, 254, 254, 0.5);
    font-size: 14px;
    line-height: 20px;
    font-family: $FontText;
}
:-ms-input-placeholder { 
    color: rgba(254, 254, 254, 0.5);
    font-size: 14px;
    line-height: 20px;
    font-family: $FontText;
}

input[type="checkbox"]:checked, 
input[type="checkbox"]:not(:checked)
{
    position: absolute;
    left: -100000px;
}

input[type="checkbox"]:checked + label, 
input[type="checkbox"]:not(:checked) + label {
    display: flex;
    flex-direction: row;
    position: relative;
    padding-left: 28px;
    line-height: 20px;
    font-size: 12px;
    cursor: pointer;
}

input[type="checkbox"]:not(:checked) + label:before {
    content: "";
    position: absolute;
    left: 0px;
    top: 0px;
    width: 18px;
    height: 18px;
    border: 1px solid #dddddd;
    background-color: transparent;
    z-index: 10;
}

input[type="checkbox"]:checked + label:before, 
input[type="checkbox"]:not(:checked) + label:before {
    border-radius: 2px;
}

input[type="checkbox"]:checked + label:before {
    content: url("https://img.icons8.com/android/24/000000/checkmark.png");
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    left: 0px;
    top: 0px;
    width: 18px;
    height: 18px;
    border: 1px solid #dddddd;
    background-color: #FEFEFE;
}


.demo {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 20px;
    left: 16px;
    flex-direction: column;
    
    :first-child {
      margin-bottom: 20px;
    }
  }
  
  .progress {
    transform: rotate(-90deg);
  }


  #hidden {
      stroke: rgba(5, 5, 5, 0.8);
  }

  .count {
      position: absolute;
      top: 20px;
      color: #128DA9;
      font-weight: 500;
      font-size: 70px;
      line-height: 120%;
      font-family: $FontText;
  }

.one{
    opacity: 1;
}

.two{
    opacity: 0;
}

.three {
      opacity: 0;
}

.origin,
.control,
.galaxy,
.star
{
  position: absolute;
  transform-style: preserve-3d;
}

.origin
{
  transform: translate3d( $origin );
  right: 150px;
  top: 200px;

  @include for-small-up() {
      right: 250px;
  }

  @include for-large-up() {
      right: 460px;
  }
    
}

.control
{
  transform: scale3d( 0, 0, 0 );
  animation: appear $time linear forwards;
}

.galaxy
{
  animation: rotation $time linear infinite;
}

.star
{
  &,
  &::before,
  &::after
  {
    position: absolute;
    transform-style: preserve-3d;
  }
  
  &::before,
  &::after
  {
    background: var( --background );
    border-radius: 50%;
    box-shadow: var( --shadow );
    content: '';
    height: var( --size );
    width: var( --size );
  }
  
  &::before
  {
    transform: var( --transform );
  }
  
  &::after
  {
    transform: scale3d( -1, -1, -1 ) var( --transform );
  }
}

@include galaxy ();

@keyframes rotation
{
  100% { transform: rotate3d( $rotation, 360deg ) }
}

@keyframes appear
{
  100% { transform: scale3d( 1, 1, 1 ) }
}

@keyframes scale
{
  0%, 100% { transform: scale3d( 1, 1, 1 ) }
  50% { transform: scale3d( .75, .75, .75 ) }
}